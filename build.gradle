buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.0"
    classpath "org.asciidoctor:asciidoctor-gradle-jvm:2.4.0"
  }
}

plugins {
  id 'java'
  id 'jacoco'
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.asciidoctor.convert"

group 'com.sapient.credit'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
defaultTasks 'clean', 'build', 'bootRun'

repositories {
  mavenCentral()
}

asciidoctor {
  sourceDir = file('docs')
  outputDir = file('build/operating-manual')

  sources {
    include '**/*.adoc'
  }
}
dependencies {

  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.4.0'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.4.0'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.4.0'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.4.0'
  compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'
  compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.2'
  compile group: 'com.h2database', name: 'h2', version: '1.4.200'
  compile group: 'org.flywaydb', name: 'flyway-core', version: '7.3.2'
  compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.14'
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.14'

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.0'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.14'
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.14'

}
jacoco {
  toolVersion = "0.8.5"
  reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled false
    csv.enabled false
    html.destination file("${buildDir}/jacoco/html")
  }
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
  jacoco {
    destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    classDumpDir = file("$buildDir/jacoco/classpathdumps")
  }
}

sourceSets {
  test {
    resources {
      srcDirs = ["src/main/resources", "src/test/resources"]
    }
  }
}

asciidoctor {
  sourceDir = file('docs')
  outputDir = file("build/operating-manual")

  sources {
    include '**/*.adoc'
  }
}
